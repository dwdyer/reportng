<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="zurich" name="Default test" tests="5" failures="0" timestamp="9 Mar 2012 19:22:53 GMT" time="1.185" errors="0">
  <testcase name="@AfterMethod sleepAfter" time="0.0" classname="org.uncommons.reportng.ChronologyTest">
    <failure type="java.lang.RuntimeException" message="Time Bomb!">
      <![CDATA[java.lang.RuntimeException: Time Bomb!
	at org.uncommons.reportng.ChronologyTest.sleepAfter(ChronologyTest.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:543)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:772)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:883)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1208)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:758)
	at org.testng.TestRunner.run(TestRunner.java:613)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:87)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1067)
	at org.testng.TestNG.run(TestNG.java:979)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:109)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:202)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:173)
]]>
    </failure>
  </testcase>
  <testcase name="@BeforeMethod sleepBefore" time="0.0" classname="org.uncommons.reportng.ChronologyTest">
    <skipped/>
  </testcase>
  <testcase name="@AfterMethod sleepAfter" time="0.0" classname="org.uncommons.reportng.ChronologyTest">
    <skipped/>
  </testcase>
  <testcase name="@BeforeMethod sleepBefore" time="0.0" classname="org.uncommons.reportng.ChronologyTest">
    <skipped/>
  </testcase>
  <testcase name="@AfterMethod sleepAfter" time="0.0" classname="org.uncommons.reportng.ChronologyTest">
    <skipped/>
  </testcase>
  <testcase name="@BeforeMethod sleepBefore" time="0.0" classname="org.uncommons.reportng.ChronologyTest">
    <skipped/>
  </testcase>
  <testcase name="@AfterMethod sleepAfter" time="0.0" classname="org.uncommons.reportng.ChronologyTest">
    <skipped/>
  </testcase>
  <testcase name="testGetAverageTestDuration" time="0.152" classname="org.uncommons.reportng.ChronologyTest"/>
  <testcase name="testGetDuration" time="0.0080" classname="org.uncommons.reportng.ChronologyTest"/>
  <testcase name="testGetPreceedingMethod" time="0.0" classname="org.uncommons.reportng.ChronologyTest">
    <skipped/>
  </testcase>
  <testcase name="testThreadCountWhenMoreThanOne" time="0.0010" classname="org.uncommons.reportng.ChronologyTest">
    <skipped/>
  </testcase>
  <testcase name="testThreadCountWhenOnlyOne" time="0.0010" classname="org.uncommons.reportng.ChronologyTest">
    <skipped/>
  </testcase>
</testsuite>
